#!/bin/bash

# Dials and knobs: Allow configuration of which domain, vault, and item to
# fetch. Treat "TEAM.1password.com" domain input the same as "TEAM" because
# that can be super confusing.
op_domain=${ONEPASSWORD_DOMAIN:-my}
op_domain_replaced=${op_domain/1password.com//}
op_vault=${ONEPASSWORD_VAULT:-Personal}
op_item=${ONEPASSWORD_ITEM:-credentials.env}

if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
  signin=$(op signin $op_domain_replaced.1password.com)
  result=$?
  if [ $result -ne 0 ]; then
    echo -e "\x1b[31mFailed to signin.\x1b[0m"
    echo "$signin"
  else
    eval "$signin"
    item=$(op get item --vault=${op_vault} ${op_item} .env | jq '.details.notesPlain' -r)
    result=$?
    if [ $result -eq 0 ]; then
      eval "$item"
      result=$?
      if [ $result -ne 0 ]; then
        echo -e "\x1b[31mFailed to evaluate credentials. \x1b[0m Check the following script for errors & correct them in 1Password's UI:"
        echo "======== output ========="
        echo "$item"
        echo "====== end output ======="
      else
        echo -e "\x1b[32mActivated.\x1b[0m"
        export PS1="\033[31m(creds)\033[0m $PS1"
      fi
    else

      echo -e "\x1b[31mFailed to fetch "'"'"${op_item}"'"'".\x1b[0m Does this item exist in your "'"'"${op_vault}"'"'" 1pass vault?"
    fi
    op signout ${op_domain_replaced}.1password.com
    eval "unset OP_SESSION_${op_domain_replaced}"
  fi
else
  echo "You must source this script; it cannot be run on its own."
fi
